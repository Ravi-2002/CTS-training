

import React from 'react';
import '../../../../config/jest/test-setup';
import { render } from '@testing-library/react';
import { Provider } from 'react-redux';
import App from '../app';
import configureStore from '../../../shared/store/configureStore';
import rootReducer from '../reducers';

describe('App', () => {
  const store = configureStore(rootReducer);
  const originalConsoleLog = console.log;
  beforeEach(() => {
    console.log = jest.fn();
  });
  afterEach(() => {
    console.log = originalConsoleLog;
  });
  test('renders app component', () => {
    window.vztag = { api: { dispatch: jest.fn() } };
    const { getByTestId } = render(<Provider store={store}><App /></Provider>);
    const appElement = getByTestId('app');
    expect(appElement).toBeTruthy();
  });
  test('renders app component without vztag', () => {
    global._isNative = {};
    window.vztag = { api: { dispatch: false } };
    render(<Provider store={store}><App /></Provider>);
  });
  test('should trigger document event listener - OMNI event', async () => {
    // window.vztag.api.dispatch.mockReset();
    const addEvt = new Event('vztagLoaded');
    document.dispatchEvent(addEvt);
  });
  test('should trigger document event listener - OMNI event', async () => {
    window.vztag = { api: { dispatch: false } };
    const addEvt = new Event('vztagLoaded');
    document.dispatchEvent(addEvt);
  });
  test('should trigger document event listener - dispatch not a function', async () => {
    window.vztag = { api: { dispatch: true } };
    const addEvt = new Event('vztagLoaded');
    document.dispatchEvent(addEvt);
  });
  // test("renders session timeout modal", () => {
  //     const { getByTestId } = render(<App />);
  //     const sessionTimeoutModalElement = getByTestId("session-timeout-modal");
  //     expect(sessionTimeoutModalElement).toBeInTheDocument();
  // });
});
