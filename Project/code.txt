import React from 'react';
import { render, screen, fireEvent } from '@testing-library/react';
import { Provider, useDispatch } from 'react-redux';
import { Router } from 'react-router-dom';
import { createMemoryHistory } from 'history';
import configureStore from 'redux-mock-store';
import BlockCallsList from '../BlockCallsList';

jest.mock('react-redux', () => ({
  ...jest.requireActual('react-redux'),
  useDispatch: jest.fn()
}));

const mockStore = configureStore([]);

describe('BlockCallsList', () => {
  let store;
  let history;

  beforeEach(() => {
    localStorage.setItem('mdn', '1234567890');
    history = createMemoryHistory();
    useDispatch.mockReturnValue(jest.fn()); // Prevent thunk error

    store = mockStore({
      Detail: {
        blockedNumbers: [{ phoneNumber: '1112223333' }],
        addBlockCallMsg: {},
        deleteBlockCallMsg: {},
        isFetching: false
      }
    });
  });

  it('renders blocked numbers', () => {
    render(
      <Provider store={store}>
        <Router history={history}>
          <BlockCallsList history={history} />
        </Router>
      </Provider>
    );

    expect(screen.getByText('1112223333')).toBeInTheDocument();
  });

  it('navigates to input page on add button click', () => {
    render(
      <Provider store={store}>
        <Router history={history}>
          <BlockCallsList history={history} />
        </Router>
      </Provider>
    );

    const button = screen.getByRole('button', { name: /Add a number/i });
    fireEvent.click(button);
    expect(history.location.pathname).toBe('/callsandmessages');
  });
});
