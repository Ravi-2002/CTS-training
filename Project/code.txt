import axios from "axios";
import { changeParent } from "./devices"; // adjust path
import * as api from "../api"; // adjust path to apiUrl

jest.mock("axios");

describe("changeParent axios coverage", () => {
  beforeEach(() => {
    jest.clearAllMocks();
  });

  it("should hit axios.post with correct args", async () => {
    // ðŸ”¹ mock apiUrl so retrieveNumberShareDetails exists
    jest.spyOn(api, "apiUrl").mockReturnValue({
      retrieveNumberShareDetails: "/mock-endpoint"
    });

    // ðŸ”¹ mock axios response
    axios.post.mockResolvedValue({ data: { status: "200" } });

    const params = { moveFrom: "111", secondaryDevice: "222", moveTo: "333" };

    const result = await changeParent(params);

    // ðŸ”¹ assertions
    expect(axios.post).toHaveBeenCalledTimes(1);
    expect(axios.post).toHaveBeenCalledWith(
      "/mock-endpoint",
      {
        trunkMdn: "111",
        branchMtn: "222",
        newtrunkMdn: "333",
        numberShareIndicator: "M"
      },
      {
        headers: {
          pageName: "numberShare",
          flowName: "numberShare"
        }
      }
    );
    expect(result).toEqual({ status: "200" });
  });
});