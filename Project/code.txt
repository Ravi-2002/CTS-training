import React from 'react';
import { render, act } from '@testing-library/react';
import { Router } from 'react-router-dom';
import { createMemoryHistory } from 'history';
import { GlobalHistory, default as getHistory } from './history';

describe("Spy and GlobalHistory", () => {
  it("should render GlobalHistory with Router", () => {
    const history = createMemoryHistory();
    const { container } = render(
      <Router history={history}>
        <GlobalHistory />
      </Router>
    );
    expect(container).toBeDefined();
    expect(getHistory()).toBe(history); // verifies constructor set history
  });

  it("should update globalHistory on prop change", () => {
    const history1 = createMemoryHistory({ initialEntries: ['/initial'] });
    const history2 = createMemoryHistory({ initialEntries: ['/new'] });

    const { rerender } = render(
      <Router history={history1}>
        <GlobalHistory />
      </Router>
    );

    // force re-render with new history
    rerender(
      <Router history={history2}>
        <GlobalHistory />
      </Router>
    );

    expect(getHistory()).toBe(history2); // verifies componentDidUpdate was called
  });
});