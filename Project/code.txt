import React from 'react';
import { render, screen, fireEvent } from '@testing-library/react';
import { Router, Route } from 'react-router-dom';
import { Provider } from 'react-redux';
import configureStore from 'redux-mock-store';
import ServiceDetails from '../../components/serviceDetails';

const mockStore = configureStore([]);

const setup = (initialState, path = '/service-details/Service A') => {
  const store = mockStore(initialState);
  const history = {
    push: jest.fn(),
    goBack: jest.fn(),
    location: { pathname: path },
    listen: jest.fn(),
    createHref: jest.fn(),
  };

  render(
    <Provider store={store}>
      <Router history={history}>
        <Route path="/service-details/:serviceName">
          <ServiceDetails />
        </Route>
      </Router>
    </Provider>
  );

  return { store, history };
};

describe('ServiceDetails Component', () => {
  it('renders service title and longDescriptionMVA', () => {
    const initialState = {
      Home: {
        services: {
          Category1: [
            {
              serviceName: 'Service A',
              longDescriptionMVA: '<b>Long Description MVA</b>',
            },
          ],
        },
      },
    };

    setup(initialState);

    expect(screen.getByText('Service A')).toBeInTheDocument();
    expect(screen.getByText('Long Description MVA')).toBeInTheDocument();
  });

  it('renders longDescription if longDescriptionMVA is not available', () => {
    const initialState = {
      Home: {
        services: {
          Category1: [
            {
              serviceName: 'Service B',
              longDescription: 'Fallback long description',
            },
          ],
        },
      },
    };

    setup(initialState, '/service-details/Service B');

    expect(screen.getByText('Service B')).toBeInTheDocument();
    expect(screen.getByText('Fallback long description')).toBeInTheDocument();
  });

  it('calls history.goBack on Done button click', () => {
    const initialState = {
      Home: {
        services: {
          Category1: [
            {
              serviceName: 'Service A',
              longDescription: 'Description here',
            },
          ],
        },
      },
    };

    const { history } = setup(initialState);
    fireEvent.click(screen.getByRole('button', { name: /Done/i }));
    expect(history.goBack).toHaveBeenCalled();
  });
});