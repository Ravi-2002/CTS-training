deleteNumber = (e, number) => {
    e.preventDefault();
    if (reactGlobals.isCsr) {
      return;
    }
    let payload = {
      mtn: this.props.selectedDevice?.encryptedMtn,
      blockNumber: number.phoneNumber,
      oldPhoneNumber: number.phoneNumber,
      expiredPhoneNumber: "",
      blockedNumbers: [],
      memo: number.memo,
      applyAll: false,
      onlyMemo: false
    }
 
    this.props.postDeleteBlockCallMsg(payload).then(() => {
      let elmnt = document.getElementById("myalert");
      if (elmnt != null)
        window.scrollTo(0, elmnt.offsetTop);
      if (this.props.deleteBlockCallMsgRes.statusCode == "00") {
        this.setState({
          deleteSuccess: true,
          trackingId: "CallsMessagesSuccessNotification",
          errorMsg: null,
          failSuccess: null,
          addSuccess: null,
          failSuccess: null,
          editSuccess: null,
          editAllSuccess: null,
          blockAgainSuccess: null,
          blockedList: this.props.deleteBlockCallMsgRes.blockedPhoneNumbers,
          expiredList: this.props.deleteBlockCallMsgRes.expiredBlockedPhoneNumbers,
          remainingBlockCount: this.props.deleteBlockCallMsgRes.remainingBlockCount,
          successMsg: this.props.deleteBlockCallMsgRes.successMsg,
          failureMsg: this.props.deleteBlockCallMsgRes.failureMsg
        })
      } else {
        this.setState({
          addSuccess: null,
          errorMsg: null,
          deleteSuccess: false,
          trackingId: "CallsMessagesFailureNotification",
          editAllSuccess: null,
 
          failSuccess: null,
          editSuccess: null,
          blockAgainSuccess: null
        })
      }
    });
  }
