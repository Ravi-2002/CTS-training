import React, { useState, useEffect } from "react";
import "bootstrap/dist/css/bootstrap.min.css";
import { Button } from "@vds/buttons";
import { Link } from "react-router-dom";
import styled from "styled-components";
import { Body, Title } from "@vds/typography";
import { Input } from "@vds/inputs";
import { useDispatch, useSelector } from "react-redux";
import {
  getCallsMessages,
  postaddBlockCallMsg,
  postDeleteBlockCallMsg,
} from "../redux/actions/fetchCallsMessages";

const BlockCallsAndMessages = () => {
  const dispatch = useDispatch();
  const [phoneNumber, setPhoneNumber] = useState("");

  const blockedNumbers = useSelector(
    (state) => state.callsMessagesReducer.blockedNumbers
  );

  useEffect(() => {
    dispatch(getCallsMessages());
  }, [dispatch]);

  const handleAddNumber = () => {
    if (phoneNumber.trim() && blockedNumbers.length < 5) {
      const payload = {
        phoneNumber: phoneNumber.trim(),
        reason: "Blocked manually",
      };
      dispatch(postaddBlockCallMsg(payload));
      setPhoneNumber("");
    }
  };

  const handleRemoveNumber = (number) => {
    const payload = {
      phoneNumber: number,
    };
    dispatch(postDeleteBlockCallMsg(payload));
  };

  return (
    <div className="container mt-4">
      <Title size="large" bold>
        Block calls and messages from up to 5 numbers.
      </Title>
      <p className="text-muted mb-4">732.609.9414</p>

      {blockedNumbers.length === 0 ? (
        <>
          <div className="mb-3">
            <Body>Enter phone number</Body>
            <Input
              type="text"
              className="form-control"
              id="phoneInput"
              value={phoneNumber}
              onChange={(e) => setPhoneNumber(e.target.value)}
              maxLength={10}
            />
          </div>
          <ButtonWrapper>
            <Button
              disabled={!phoneNumber.trim()}
              onClick={handleAddNumber}
            >
              Block number
            </Button>
          </ButtonWrapper>
        </>
      ) : (
        <>
          <TextWrapper>
            <Body>
              You are blocking {blockedNumbers.length} of 5 numbers.
            </Body>
          </TextWrapper>

          {blockedNumbers.length < 5 && (
            <>
              <div className="mb-3">
                <Input
                  type="text"
                  className="form-control"
                  placeholder="Enter phone number"
                  value={phoneNumber}
                  onChange={(e) => setPhoneNumber(e.target.value)}
                />
              </div>
              <ButtonWrapper>
                <Button
                  onClick={handleAddNumber}
                  disabled={!phoneNumber.trim()}
                >
                  Add a number
                </Button>
              </ButtonWrapper>
            </>
          )}

          <ul className="list-group mb-3">
            {blockedNumbers.map((num, index) => (
              <li
                key={index}
                className="list-group-item d-flex justify-content-between align-items-center"
              >
                {num.phoneNumber}
                <button
                  className="btn btn-sm btn-outline-danger"
                  onClick={() => handleRemoveNumber(num.phoneNumber)}
                >
                  &times;
                </button>
              </li>
            ))}
          </ul>
        </>
      )}

      <p className="mt-4 text-muted">
        There is no charge to block.{" "}
        <Link
          to={`/viewlimitation`}
          className="text-primary text-decoration-underline"
        >
          View Limitations
        </Link>
      </p>
    </div>
  );
};

const ButtonWrapper = styled.div`
  align-items: center;
  justify-content: center;
  display: flex;
`;

const TextWrapper = styled.div`
  margin-bottom: 16px;
`;

export default BlockCallsAndMessages;