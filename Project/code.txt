test('handleClick should be triggered when clicking a preference link', async () => {
  let mockOnClick = jest.fn();
  let mockGetOnClickInfo = jest.fn(() => ({ onclick: mockOnClick }));

  common.getChannelId.mockReturnValue('VZW-MFA');
  common.getContentFromSection.mockReturnValue({
    contents: [{ items: {} }],
    data: [{ mtn: '8049557864', preferences: { shareNameIDBtn: true }, shareNameIDBtnThrottle: false }],
  });
  common.getItemValue.mockImplementation((_, key) => key);
  common.getActionKey.mockReturnValue('mockActionKey');

  render(<DeviceDetail selectedDevice={{ preferences: { shareNameIDBtn: true } }} />);

  const button = screen.getByTestId('preference-shareNameIDBtn');
  expect(button).toBeInTheDocument();

  fireEvent.click(button);

  await waitFor(() => {
    expect(mockGetOnClickInfo).toHaveBeenCalledWith(expect.anything(), 'mockActionKey');
    expect(mockOnClick).toHaveBeenCalled();
  });
});